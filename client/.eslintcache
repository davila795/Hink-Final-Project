[{"/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/index.js":"1","/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/App.js":"2","/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/services/auth.service.js":"3","/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/pages/home/Home.js":"4","/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/pages/auth/SignUp.js":"5","/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/pages/auth/Login.js":"6","/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/layout/Navbar/Navbar.js":"7","/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/pages/chat/Chat.js":"8","/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/layout/footer/Footer.js":"9","/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/pages/meetings/meetings-details/MeetingDetails.js":"10","/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/pages/user/user-profile/MyProfile.js":"11","/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/pages/user/user-profile/UserProfile.js":"12","/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/pages/meetings/meetings-list/MeetingsList.js":"13","/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/services/upload.service.js":"14","/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/pages/auth/countryRegionFlag.js":"15","/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/services/meetings.service.js":"16","/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/services/user.service.js":"17","/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/pages/meetings/meetings-maps/EventDetailsMap.js":"18","/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/pages/meetings/meetings-comments/FullCommentsComponent.js":"19","/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/pages/user/edit-profile/ProfileEdit.js":"20","/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/pages/meetings/meetings-edit/Edit.js":"21","/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/pages/meetings/meetings-list/carousel/Carousel.js":"22","/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/pages/meetings/meetings-filter/MeetingsFilter.js":"23","/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/pages/meetings/meetings-card/MeetingsCards.js":"24","/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/pages/meetings/meetings-form/New.js":"25","/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/shared/alert/Alert.js":"26","/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/shared/spinner/Loader.js":"27","/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/shared/popup/PopUp.js":"28","/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/shared/collapse/CollapseAnimation.js":"29","/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/pages/meetings/meetings-comments/CommentsList.js":"30","/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/pages/meetings/meetings-comments/CommentForm.js":"31","/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/pages/meetings/meetings-maps/MapForm.js":"32","/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/pages/meetings/meetings-comments/CommentMessage.js":"33"},{"size":249,"mtime":1610487246970,"results":"34","hashOfConfig":"35"},{"size":2600,"mtime":1610487246960,"results":"36","hashOfConfig":"35"},{"size":485,"mtime":1610487246970,"results":"37","hashOfConfig":"35"},{"size":1061,"mtime":1611317471050,"results":"38","hashOfConfig":"35"},{"size":5945,"mtime":1610487246960,"results":"39","hashOfConfig":"35"},{"size":2673,"mtime":1610487246960,"results":"40","hashOfConfig":"35"},{"size":3541,"mtime":1611319882310,"results":"41","hashOfConfig":"35"},{"size":3476,"mtime":1611315866740,"results":"42","hashOfConfig":"35"},{"size":1016,"mtime":1611314505660,"results":"43","hashOfConfig":"35"},{"size":7097,"mtime":1610489183490,"results":"44","hashOfConfig":"35"},{"size":5759,"mtime":1610491866750,"results":"45","hashOfConfig":"35"},{"size":5027,"mtime":1610491681840,"results":"46","hashOfConfig":"35"},{"size":6754,"mtime":1610723272460,"results":"47","hashOfConfig":"35"},{"size":315,"mtime":1610487246970,"results":"48","hashOfConfig":"35"},{"size":1321,"mtime":1610487246960,"results":"49","hashOfConfig":"35"},{"size":934,"mtime":1610501339280,"results":"50","hashOfConfig":"35"},{"size":898,"mtime":1610491933720,"results":"51","hashOfConfig":"35"},{"size":2029,"mtime":1610487246970,"results":"52","hashOfConfig":"35"},{"size":1670,"mtime":1610487246970,"results":"53","hashOfConfig":"35"},{"size":4258,"mtime":1610491011790,"results":"54","hashOfConfig":"35"},{"size":9607,"mtime":1610487246970,"results":"55","hashOfConfig":"35"},{"size":786,"mtime":1611318513580,"results":"56","hashOfConfig":"35"},{"size":7542,"mtime":1610487246970,"results":"57","hashOfConfig":"35"},{"size":1078,"mtime":1610487246970,"results":"58","hashOfConfig":"35"},{"size":8508,"mtime":1610487246970,"results":"59","hashOfConfig":"35"},{"size":636,"mtime":1610487246970,"results":"60","hashOfConfig":"35"},{"size":278,"mtime":1610487246970,"results":"61","hashOfConfig":"35"},{"size":429,"mtime":1610487246970,"results":"62","hashOfConfig":"35"},{"size":1658,"mtime":1610487246970,"results":"63","hashOfConfig":"35"},{"size":683,"mtime":1610487246970,"results":"64","hashOfConfig":"35"},{"size":2351,"mtime":1610487246970,"results":"65","hashOfConfig":"35"},{"size":8097,"mtime":1610487246970,"results":"66","hashOfConfig":"35"},{"size":637,"mtime":1610487246970,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1f8g7iq",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"70"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/index.js",[],["141","142"],"/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/App.js",[],"/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/services/auth.service.js",[],"/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/pages/home/Home.js",["143","144"],"/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/pages/auth/SignUp.js",[],"/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/pages/auth/Login.js",[],"/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/layout/Navbar/Navbar.js",[],"/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/pages/chat/Chat.js",["145"],"/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/layout/footer/Footer.js",["146","147","148"],"/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/pages/meetings/meetings-details/MeetingDetails.js",[],"/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/pages/user/user-profile/MyProfile.js",["149"],"import React, { Component } from 'react'\nimport { Col, Container, Row, Button, Card } from 'react-bootstrap'\nimport Loader from '../../../shared/spinner/Loader'\nimport ProfileEdit from '../edit-profile/ProfileEdit'\nimport CollapseAnimation from '../../../shared/collapse/CollapseAnimation'\nimport UserService from '../../../../services/user.service'\nimport ReactCountryFlag from \"react-country-flag\"\nimport countryList from 'react-select-country-list'\nimport Popup from '../../../shared/popup/PopUp'\nimport Alert from '../../../shared/alert/Alert'\nimport './UserProfile.css'\n\n\nclass Profile extends Component {\n    constructor() {\n        super()\n        this.state = {\n            user: undefined,\n            showModal: false,\n            titleModal: 'Edit Profile',\n            showToast: false,\n            toastText: '',\n            toastColor: '',\n        }\n        this.userService = new UserService()\n    }\n\n    componentDidMount = () => this.refreshUser()\n\n    refreshUser = () => {\n        this.userService\n            .getProfile(this.props.loggedUser._id)\n            .then(response => {\n                console.log(response.data)\n                this.setState({ user: response.data })\n            })\n            .catch(err => this.handleToast(true, err.response.data.message, '#ef7a7a'))\n    }\n\n    removeContact = contactId => {\n        this.userService\n            .deleteContact(this.props.loggedUser._id, contactId)\n            .then(() => this.refreshUser())\n            .catch(err => this.handleToast(true, err.response.data.message, '#ef7a7a'))\n    }\n\n    removeAttending = meetingId => {\n        this.userService\n            .deleteMeeting(this.props.loggedUser._id, meetingId)\n            .then(() => this.refreshUser())\n            .catch(err => this.handleToast(true, err.response.data.message, '#ef7a7a'))\n    }\n\n    handleModal = visible => this.setState({ showModal: visible })\n\n    handleToast = (visible, text, color) => this.setState({ showToast: visible, toastText: text, toastColor: color })\n\n    render() {\n        return (\n            <>\n                <Container className='user-profile'>\n                    {this.state.user\n                        ?\n                        <>\n                            <Row style={{ marginBottom: '40px' }}>\n                                <Col md={{ span: 4, offset: 1 }}>\n                                    <h1>User Profile ⤵</h1>\n                                </Col>\n                            </Row>\n                            <Row >\n                                <Col md={3} style={{ textAlign: 'center' }}>\n                                    <CollapseAnimation array={this.state.user.contacts} remove={this.removeContact} buttonTitle='Contacts' />\n                                </Col>\n                                <Col md={6} >\n                                    <Card style={{ textAlign: 'center' }}>\n                                        <Card.Body>\n                                            <div style={{ backgroundColor: 'rgba(66, 157, 171,.2)', padding: '20px 0 20px 0', marginBottom: '20px', borderRadius: '20px' }}>\n                                                <img src={this.state.user.avatar} style={{ borderRadius: '50%', width: 150, objectFit: 'cover' }} />\n                                            </div>\n                                            <Card.Title>\n                                                <figure>\n                                                    <small className=\"text-muted\">{this.state.user.username + ' '}</small>\n                                                    <ReactCountryFlag countryCode={countryList().getValue(this.state.user.origin)} svg style={{ width: '30px' }} />\n                                                </figure>\n                                                {this.state.user.fullname + ' '}\n                                            </Card.Title>\n                                            <Card.Text>\n                                                {this.state.user.description}<br /><br />\n                                                <strong>Actual city: </strong>{this.state.user.city}<br /><br />\n                                                <strong>Origin: </strong>{this.state.user.origin}<br /><br />\n                                                Contact me at <strong>{this.state.user.email}</strong><br />\n                                            </Card.Text>\n                                            <Button variant='outline-dark' size='sm' onClick={() => this.handleModal(true)} >Edit Profile</Button>\n                                        </Card.Body>\n                                    </Card>\n                                </Col>\n                                <Col md={3} style={{ textAlign: 'center' }}>\n                                    <CollapseAnimation array={this.state.user.attending} remove={this.removeAttending} buttonTitle='Attending' />\n                                </Col>\n                            </Row>\n                        </>\n                        :\n                        <Loader />\n                    }\n                </Container >\n\n                <Popup show={this.state.showModal} handleModal={this.handleModal} title={this.state.titleModal}>\n                    <ProfileEdit closeModal={() => this.handleModal(false)} handleToast={this.handleToast} storeUser={this.props.storeUser} updateUser={this.refreshUser} user={this.state.user} userId={this.props.loggedUser._id} />\n                </Popup>\n\n                <Alert show={this.state.showToast} handleToast={this.handleToast} toastText={this.state.toastText} toastColor={this.state.toastColor} />\n            </>\n        )\n    }\n\n}\n\nexport default Profile","/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/pages/user/user-profile/UserProfile.js",["150"],"import React, { Component } from 'react'\nimport { Col, Container, Row, Button, Card } from 'react-bootstrap'\nimport CollapseAnimation from '../../../shared/collapse/CollapseAnimation'\nimport Loader from '../../../shared/spinner/Loader'\nimport UserService from '../../../../services/user.service'\nimport ReactCountryFlag from \"react-country-flag\"\nimport countryList from 'react-select-country-list'\nimport Alert from '../../../shared/alert/Alert'\nimport './UserProfile.css'\n\n\nclass Profile extends Component {\n    constructor() {\n        super()\n        this.state = {\n            user: undefined,\n            showToast: false,\n            toastText: '',\n            toastColor: '',\n        }\n        this.userService = new UserService()\n    }\n\n    componentDidMount = () => this.refreshUser()\n\n    componentDidUpdate = () => {\n        this.props.match.params.id !== this.state.user._id && this.refreshUser()\n    }\n\n    refreshUser = () => {\n        this.userService\n            .getProfile(this.props.match.params.id)\n            .then(response => {\n                console.log(response.data)\n                this.setState({ user: response.data })\n            })\n            .catch(err => this.handleToast(true, err.response.data.message, '#ef7a7a'))\n    }\n\n    addContact = () => {\n        this.userService\n            .addContact(this.props.loggedUser._id, this.state.user._id)\n            .then(response => this.handleToast(true, 'Added to your contacts list', '#9fead7'))\n            .catch(err => this.handleToast(true, err.response.data.message, '#ef7a7a'))\n    }\n\n    handleToast = (visible, text, color) => this.setState({ showToast: visible, toastText: text, toastColor: color })\n\n    render() {\n        return (\n            <>\n\n                <Container className='user-profile'>\n                    {this.state.user\n                        ?\n                        <>\n                            <Row style={{ marginBottom: '40px' }}>\n                                <Col md={{ span: 4, offset: 1 }}>\n                                    <h1>User Profile ⤵</h1>\n                                </Col>\n                            </Row>\n                            <Row >\n                                <Col md={3} style={{ textAlign: 'center' }}>\n                                    <CollapseAnimation array={this.state.user.contacts} buttonTitle='Contacts' />\n                                </Col>\n                                <Col md={6} >\n                                    <Card style={{ textAlign: 'center' }}>\n                                        <Card.Body>\n                                            <div style={{ backgroundColor: 'rgba(66, 157, 171,.2)', padding: '20px 0 20px 0', marginBottom: '20px', borderRadius: '20px' }}>\n                                                <img src={this.state.user.avatar} style={{ borderRadius: '50%', width: 150, objectFit: 'cover' }} />\n                                            </div>\n                                            <Card.Title>\n                                                <figure>\n                                                    <small className=\"text-muted\">{this.state.user.username + ' '}</small>\n                                                    <ReactCountryFlag countryCode={countryList().getValue(this.state.user.origin)} svg style={{ width: '30px' }} />\n                                                </figure>\n                                                {this.state.user.fullname + ' '}\n\n                                                <Button variant='outline-info' size='sm' style={{ fontSize: 10, width: 50, padding: 0 }} onClick={this.addContact}>Add</Button>\n                                            </Card.Title>\n                                            <Card.Text>\n                                                {this.state.user.description}<br /><br />\n                                                <strong>Actual city: </strong>{this.state.user.city}<br /><br />\n                                                <strong>Origin: </strong>{this.state.user.origin}<br /><br />\n                                                Contact me at <strong>{this.state.user.email}</strong><br />\n                                            </Card.Text>\n                                        </Card.Body>\n                                    </Card>\n                                </Col>\n                                <Col md={3} style={{ textAlign: 'center' }}>\n                                    <CollapseAnimation array={this.state.user.attending} buttonTitle='Attending' />\n                                </Col>\n                            </Row>\n                        </>\n                        :\n                        <Loader />\n                    }\n                </Container >\n\n                <Alert show={this.state.showToast} handleToast={this.handleToast} toastText={this.state.toastText} toastColor={this.state.toastColor} />\n            </>\n        )\n    }\n\n}\n\nexport default Profile","/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/pages/meetings/meetings-list/MeetingsList.js",[],"/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/services/upload.service.js",[],"/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/pages/auth/countryRegionFlag.js",[],"/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/services/meetings.service.js",[],"/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/services/user.service.js",[],"/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/pages/meetings/meetings-maps/EventDetailsMap.js",["151"],"import { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\"\nimport Geocode from \"react-geocode\"\n\nGeocode.setApiKey(`${process.env.REACT_APP_GOOGLEMAPS_API}`);\nGeocode.enableDebug();\n\nconst EventMap = (props) => {\n    console.log(props)\n    const AsyncMap = withScriptjs(\n        withGoogleMap(\n            () => (\n                <GoogleMap google={props.google}\n                    defaultZoom={props.zoom}\n                    defaultCenter={{ lat: props.coordinates[0], lng: props.coordinates[1] }}\n                >\n                    {/* InfoWindow on top of marker */}\n                    <InfoWindow\n                        position={{ lat: (props.coordinates[0] + 0.0018), lng: props.coordinates[1] }}\n                    >\n                        <div>\n                            <span style={{ padding: 0, margin: 0 }}>{props.address}</span>\n                        </div>\n                    </InfoWindow>\n\n                    {/*Marker*/}\n                    <Marker google={props.google}\n                        name={'Dolores park'}\n                        position={{ lat: props.coordinates[0], lng: props.coordinates[1] }}\n                    />\n                    <Marker />\n                </GoogleMap>\n            )\n        )\n    );\n    let map;\n    {\n        props.coordinates\n            ?\n            map =\n            <AsyncMap\n                googleMapURL={\"https://maps.googleapis.com/maps/api/js?key=\" + process.env.REACT_APP_GOOGLEMAPS_API + \"&libraries=places\"}\n                loadingElement={\n                    < div style={{ height: `100%` }\n                    } />\n                }\n                containerElement={\n                    < div style={{ height: props.height, margin: '20px 0' }} />\n                }\n                mapElement={\n                    < div style={{ height: `100%` }} />\n                }\n            />\n            :\n            map = <div style={{ height: props.height }} />\n    }\n    return (map)\n}\n\nexport default EventMap\n","/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/pages/meetings/meetings-comments/FullCommentsComponent.js",["152"],"import { Link } from 'react-router-dom'\nimport { Col, Row } from 'react-bootstrap'\nimport Loader from '../../../shared/spinner/Loader'\nimport CommentList from './CommentsList'\nimport CommentForm from './CommentForm'\n\nexport default (props) => {\n\n    return (\n        <>\n            {props.comments\n                ?\n                <div className=\"bg-light shadow\" style={{padding:20,margin:'20px 0'}}>\n                    <Row>\n                        <Col>\n                            <header>\n                                <h5>\n                                    Comments\n                                <span className=\"px-2\" role=\"img\" aria-label=\"Chat\">💬</span>\n                                </h5>\n                            </header>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col md={{ span: 4 }} className=\"pt-3 border-right\">\n                            <p>Say something about this plan:</p>\n                            {props.loggedUser ?\n                                <CommentForm loggedUser={props.loggedUser} meetingId={props.meetingId} updateMeeting={props.updateMeeting} />\n                                :\n                                <Link to='/login' className='btn btn-info btn-sm'>Log in first</Link>\n                            }\n                        </Col>\n                        <Col md={{ span: 8 }} className=\"pt-3 bg-white\">\n                            <CommentList comments={props.comments} />\n                        </Col>\n                    </Row>\n\n                </div>\n                :\n                <Loader />\n            }\n        </>\n    );\n\n}","/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/pages/user/edit-profile/ProfileEdit.js",[],"/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/pages/meetings/meetings-edit/Edit.js",[],"/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/pages/meetings/meetings-list/carousel/Carousel.js",[],"/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/pages/meetings/meetings-filter/MeetingsFilter.js",[],"/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/pages/meetings/meetings-card/MeetingsCards.js",[],"/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/pages/meetings/meetings-form/New.js",[],"/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/shared/alert/Alert.js",[],"/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/shared/spinner/Loader.js",[],"/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/shared/popup/PopUp.js",[],"/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/shared/collapse/CollapseAnimation.js",["153"],"import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Collapse, ListGroup } from 'react-bootstrap'\nimport './CollapseAnimation.css'\n\nexport default ({ array, remove, buttonTitle }) => {\n\n    const [open, setOpen] = useState(false);\n    return (\n        <>\n            <Button onClick={() => setOpen(!open)} size='sm' aria-controls=\"example-collapse-text\" variant='info' aria-expanded={open}>\n                {buttonTitle}\n            </Button>\n            <Collapse in={open}>\n                <ListGroup className='countries-list' style={{ textAlign: 'start' }}>\n                    {array.map(elm => {\n                        return (\n                            <div key={elm._id} >\n                                <Link to={elm.title ? `/meetings/${elm._id}` : `/profile/${elm._id}`} className='list-group-item-action' >\n                                    <img className='contact-img' src={elm.avatar || elm.image} alt={elm.username || elm.title} />{elm.title || elm.fullname}\n                                </Link>\n                                {\n                                    remove &&\n                                    <div style={{ textAlign: 'end' }}>\n                                        <Button className=\"btn-sm\" variant='outline-danger' style={{ fontSize: 10, width: 50, padding: 0 }} onClick={() => remove(elm._id)}>Remove</Button>\n                                    </div>\n                                }\n                            </div>\n                        )\n                    })\n                    }\n                </ListGroup>\n            </Collapse>\n        </>\n    )\n}","/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/pages/meetings/meetings-comments/CommentsList.js",[],"/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/pages/meetings/meetings-comments/CommentForm.js",[],"/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/pages/meetings/meetings-maps/MapForm.js",["154","155"],"import React, { Component } from 'react'\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\"\nimport Autocomplete from 'react-google-autocomplete';\nimport Geocode from \"react-geocode\"\nimport './MapForm.css'\n\nGeocode.setApiKey(process.env.REACT_APP_GOOGLEMAPS_API);\nGeocode.enableDebug();\n\nclass Map extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            address: '',\n            city: '',\n            mapPosition: {\n                lat: this.props.center.lat,\n                lng: this.props.center.lng\n            },\n            markerPosition: {\n                lat: this.props.center.lat,\n                lng: this.props.center.lng\n            }\n        }\n    }\n    /**\n      * Get the current address from the default map position and set those values in the state\n      */\n    componentDidMount() {\n        console.log(this.state.mapPosition.lat)\n        Geocode.fromLatLng(this.state.mapPosition.lat, this.state.mapPosition.lng).then(\n            response => {\n                const address = response.results[0].formatted_address,\n                    addressArray = response.results[0].address_components,\n                    city = this.getCity(addressArray)\n                this.setState({\n                    address: (address) ? address : '',\n                    city: (city) ? city : '',\n                })\n            },\n            error => {\n                console.error(error);\n            }\n        );\n    };\n    /**\n      * Component should only update ( meaning re-render ), when the user selects the address, or drags the pin\n      *\n      * @param nextProps\n      * @param nextState\n      * @return {boolean}\n      */\n    shouldComponentUpdate(nextProps, nextState) {\n        if (\n            this.state.markerPosition.lat !== this.props.center.lat ||\n            this.state.address !== nextState.address ||\n            this.state.city !== nextState.city\n        ) {\n            return true\n        } else if (this.props.center.lat === nextProps.center.lat) {\n            return false\n        }\n    }\n    /**\n      * Get the city and set the city input value to the one selected\n      *\n      * @param addressArray\n      * @return {string}\n      */\n    getCity = (addressArray) => {\n        let city = '';\n        for (let i = 0; i < addressArray.length; i++) {\n            if (addressArray[i].types[0] && 'administrative_area_level_2' === addressArray[i].types[0]) {\n                city = addressArray[i].long_name;\n                return city;\n            }\n        }\n    };\n\n    /**\n      * When the marker is dragged you get the lat and long using the functions available from event object.\n      * Use geocode to get the address, city, area and state from the lat and lng positions.\n      * And then set those values in the state.\n      *\n      * @param event\n      */\n    onMarkerDragEnd = (event) => {\n        let newLat = event.latLng.lat(),\n            newLng = event.latLng.lng(),\n            addressArray = [];\n        Geocode.fromLatLng(newLat, newLng).then(\n            response => {\n                const address = response.results[0].formatted_address,\n                    addressArray = response.results[0].address_components,\n                    city = this.getCity(addressArray);\n                this.setState({\n                    address: (address) ? address : '',\n                    city: (city) ? city : '',\n                    markerPosition: {\n                        lat: newLat,\n                        lng: newLng\n                    },\n                    mapPosition: {\n                        lat: newLat,\n                        lng: newLng\n                    }\n                })\n                this.props.handleLocation(newLat, newLng, address, city)\n            },\n            error => {\n                console.error(error);\n            }\n        );\n    };\n\n    /**\n * When the user types an address in the search box\n * @param place\n */\n    onPlaceSelected = (place) => {\n        const address = place.formatted_address,\n            addressArray = place.address_components,\n            city = this.getCity(addressArray),\n            latValue = place.geometry.location.lat(),\n            lngValue = place.geometry.location.lng();\n\n        this.setState({\n            address: (address) ? address : '',\n            city: (city) ? city : '',\n            markerPosition: {\n                lat: latValue,\n                lng: lngValue\n            },\n            mapPosition: {\n                lat: latValue,\n                lng: lngValue\n            }\n        })\n        this.props.handleLocation(latValue, lngValue, address, city)\n    };\n\n\n    render() {\n        const AsyncMap = withScriptjs(\n            withGoogleMap(\n                () => (\n                    <GoogleMap google={this.props.google}\n                        defaultZoom={this.props.zoom}\n                        defaultCenter={{ lat: this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\n                    >\n                        {/* For Auto complete Search Box */}\n                        <Autocomplete\n                            style={{\n                                width: '100%',\n                                height: '40px',\n                                paddingLeft: '16px',\n                                marginTop: '2px',\n                                marginBottom: '30px'\n                            }}\n                            onPlaceSelected={place => this.onPlaceSelected(place)}\n                            types={['(regions)']}\n                            componentRestrictions={{ country: \"es\" }}\n                        />\n\n                        {/* InfoWindow on top of marker */}\n                        <InfoWindow\n                            onClose={this.onInfoWindowClose}\n                            position={{ lat: (this.state.markerPosition.lat + 0.0018), lng: this.state.markerPosition.lng }}\n                        >\n                            <div>\n                                <span style={{ padding: 0, margin: 0 }}>{this.state.address}</span>\n                            </div>\n                        </InfoWindow>\n\n                        {/*Marker*/}\n                        <Marker google={this.props.google}\n                            name={'Dolores park'}\n                            draggable={true}\n                            onDragEnd={this.onMarkerDragEnd}\n                            position={{ lat: this.state.markerPosition.lat, lng: this.state.markerPosition.lng }}\n                        />\n                        <Marker />\n                    </GoogleMap>\n                )\n            )\n        );\n        let map;\n        {\n            this.props.center.lat\n                ?\n                map = <div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"\">City</label>\n                        <input type=\"text\" name=\"city\" className=\"form-control\" readOnly=\"readOnly\" value={this.state.city} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"\">Address</label>\n                        <input type=\"text\" name=\"address\" className=\"form-control\" readOnly=\"readOnly\" value={this.state.address} />\n                    </div>\n\n                    <AsyncMap\n                        googleMapURL={`https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLEMAPS_API}&libraries=places`}\n                        loadingElement={\n                            <div style={{ height: `100%` }} />\n                        }\n                        containerElement={\n                            <div style={{ height: '100%' }} />\n                        }\n                        mapElement={\n                            <div style={{ height: this.props.height }} />\n                        }\n                    />\n                </div>\n                :\n                map = <div style={{ height: this.props.height }} />\n        }\n        return (map)\n    }\n}\nexport default Map","/home/carlos/Ironhack/revisionHink/Hink-Final-Project/client/src/components/pages/meetings/meetings-comments/CommentMessage.js",[],{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","severity":1,"message":"161","line":1,"column":21,"nodeType":"162","messageId":"163","endLine":1,"endColumn":27},{"ruleId":"160","severity":1,"message":"164","line":1,"column":39,"nodeType":"162","messageId":"163","endLine":1,"endColumn":48},{"ruleId":"165","severity":1,"message":"166","line":124,"column":13,"nodeType":"167","endLine":124,"endColumn":118},{"ruleId":"168","severity":1,"message":"169","line":11,"column":66,"nodeType":"170","endLine":11,"endColumn":81},{"ruleId":"168","severity":1,"message":"169","line":16,"column":80,"nodeType":"170","endLine":16,"endColumn":95},{"ruleId":"168","severity":1,"message":"169","line":21,"column":79,"nodeType":"170","endLine":21,"endColumn":94},{"ruleId":"165","severity":1,"message":"166","line":78,"column":49,"nodeType":"167","endLine":78,"endColumn":149},{"ruleId":"165","severity":1,"message":"166","line":70,"column":49,"nodeType":"167","endLine":70,"endColumn":149},{"ruleId":"171","severity":1,"message":"172","line":36,"column":5,"nodeType":"173","messageId":"174","endLine":55,"endColumn":6},{"ruleId":"175","severity":1,"message":"176","line":7,"column":1,"nodeType":"177","endLine":46,"endColumn":2},{"ruleId":"175","severity":1,"message":"176","line":6,"column":1,"nodeType":"177","endLine":36,"endColumn":2},{"ruleId":"160","severity":1,"message":"178","line":90,"column":13,"nodeType":"162","messageId":"163","endLine":90,"endColumn":25},{"ruleId":"171","severity":1,"message":"172","line":188,"column":9,"nodeType":"173","messageId":"174","endLine":216,"endColumn":10},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'addressArray' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]